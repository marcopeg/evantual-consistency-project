version: "3.8"
services:
  postgres:
    image: postgres:13.3
    restart: always
    ports:
      - ${PG_PORT:-5432}:5432
    volumes:
      - .docker-data/pg-data:/var/lib/postgresql/data:consistent
      - .docker-data/pg-backup:/backup:consistent
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 20

  hasura:
    build:
      context: ./services/hasura
    ports:
      - ${HASURA_PORT:-8080}:8080
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET:-qwerty}
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key":"dd5dd7i2vddf786vs7v3fgb87987vdsc7sd98"}'
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 5s
      retries: 20

  migrations:
    build:
      context: ./services/migrations
    depends_on:
      hasura:
        condition: service_healthy
    volumes:
      - ./services/migrations/metadata:/metadata:cached
      - ./services/migrations/migrations:/migrations:cached
      - ./services/migrations/seeds:/seeds:cached
    environment:
      HASURA_ENDPOINT: http://hasura:8080
      HASURA_ADMIN_SECRET: ${HASURA_ADMIN_SECRET:-qwerty}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
    stdin_open: true
    tty: true

  products:
    image: node:14-alpine
    volumes:
      - .docker-data/products/node_modules:/usr/src/app/node_modules:cached
      - ./services/products/package.json:/usr/src/app/package.json:delegated
      - ./services/products/package-lock.json:/usr/src/app/package-lock.json:delegated
      - ./services/products/src:/usr/src/app/src:delegated
    environment:
      NODE_ENV: development
      PGSTRING: postgresql://postgres:postgres@postgres:5432/postgres
      CURSOR_ID: products_build_cache
    working_dir: /usr/src/app
    entrypoint: ["npm", "run", "start:docker"]
    depends_on:
      hasura:
        condition: service_healthy
